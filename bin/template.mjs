import { isDevMode } from './common.mjs';
import { minify } from 'html-minifier';
import { useMetaData } from './MetaData.mjs';
import importStatic from './importStatic.mjs';

const minifyOptions = {
    collapseBooleanAttributes: true,
    collapseInlineTagWhitespace: true,
    collapseWhitespace: true,
    conservativeCollapse: true,
    continueOnParseError: true,
    decodeEntities: true,
    html5: true, // default
    includeAutoGeneratedTags: true, // default
    keepClosingSlash: false, // default
    minifyCSS: false, // default
    minifyJS: false, // default
    preserveLineBreaks: true,
    preventAttributesEscaping: false, // default
    removeAttributeQuotes: true,
    removeComments: true,
    removeEmptyAttributes: true,
    removeEmptyElements: false, // default
    removeOptionalTags: false, // default
    removeRedundantAttributes: true,
    removeScriptTypeAttributes: true,
    removeStyleLinkTypeAttributes: true,
    removeTagWhitespace: false, // default
    sortAttributes: false, // default
    sortClassName: false, // default
    useShortDoctype: true, 
};

const minifyIfNeeded = (html) => {
    if (isDevMode()) {
        return html;
    }
    return minify(html, minifyOptions);
};

const page = async ({title, description, body, categories, time, tags, prev, next}) => {
    const metaData = await useMetaData();
    return minifyIfNeeded(`
<html>
<head>
    <title>${title ? `${title} - ` : ''}OTCHY.NET</title>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css">
    ${await importStatic.css('/s/css/style.css')}
</head>
<body>
    <nav>
    <a href="/">HOME</a>
    </nav>
    <header>
        ${title ? `<h1>${title}</h1>` : ''}
        ${description ? `<p>
            ${description}
        </p>` : ''}
    </header>
    <main>
        ${body}
        ${prev ? `<div class="prev">
            <a href="${prev.path}">${prev.title}</a>
        </div>` : ''}
        ${next ? `<div class="next">
            <a href="${next.path}">${next.title}</a>
        </div>` : ''}
    </main>
    <footer>
        ${getCategories(categories, metaData)}
        ${getTags(tags, metaData)}
    </footer>
</body>
</html>
`);
};

const getCategories = (categories, metaData) => {
    if (!categories || categories.length === 0 || !metaData) {
        return '';
    }
    return `
        <p class="categories">
            ${categories.map(slug => {
                const category = metaData.categories[slug];
                return `<a href="/category/${slug}/">${category.label}</a>`;
            }).join('\n')}
        </p>
    `;
};

const getTags = (tags, metaData) => {
    if (!tags || tags.length === 0 || !metaData) {
        return '';
    }
    return `
        <p class="categories">
            ${tags.map(slug => {
                const tag = metaData.tags[slug];
                return `<a href="/tag/${slug}/">${tag.label}</a>`;
            }).join('\n')}
        </p>
    `;
};

const article = ({title, truncatedBody, path}) => {
    return `
<article>
    <h1><a href="${path}">${title}</a></h1>
    <p>
        ${truncatedBody}
    </p>
</article>
`;
};

export default {
    page,
    article
};